rule R_pipelineReport:
    """
    Create the pipeline report (R).
    """
    input:
        expand("%s/STATS/BOWTIE/Mature/{samples}_mature.flagstat" % (config["project-folder"]), samples=samples),
        expand("%s/STATS/BOWTIE/Mature_Species/{samples}_mature_species.flagstat" % (config["project-folder"]), samples=samples),
        expand("%s/STATS/STAR/Mature/{samples}_mature.flagstat" % (config["project-folder"]), samples=samples),
        expand("%s/STATS/STAR/Mature_Species/{samples}_mature_species.flagstat" % (config["project-folder"]), samples=samples),
      #  expand("%s/STATS/BOWTIE/Reference/{samples}_reference.flagstat" % (config["project-folder"]), samples=samples),
        expand("%s/STATS/STAR/Reference/{samples}_reference.flagstat" % (config["project-folder"]), samples=samples),
        expand("%s/FASTQ/Mature/mapped/{samples}_mature_mapped.wcl" % (config["project-folder"]), samples=samples),
        expand("%s/FASTQ/Hairpin/mapped/{samples}_hairpin_mapped.wcl" % (config["project-folder"]), samples=samples),
      #  expand("%s/FASTQ/Reference/mapped/{samples}_reference_mapped.wcl" % (config["project-folder"]), samples=samples),
        expand("%s/QUANTIFICATION/BOWTIE/Mature/{samples}_bowtie_mature_seqkit.txt" % (config["project-folder"]), samples=samples),
        expand("%s/QUANTIFICATION/BOWTIE/Mature_Species/{samples}_bowtie_mature_species_seqkit.txt" % (config["project-folder"]), samples=samples),
        expand("%s/QUANTIFICATION/BOWTIE/Hairpin/{samples}_bowtie_hairpin_seqkit.txt" % (config["project-folder"]), samples=samples),
        expand("%s/QUANTIFICATION/STAR/Mirbase/{samples}_star_mature.txt" % (config["project-folder"]), samples=samples),
        expand("%s/QUANTIFICATION/STAR/Mirbase/{samples}_star_mature_species.txt" % (config["project-folder"]), samples=samples),
        expand("%s/QUANTIFICATION/STAR/Mirbase/{samples}_star_hairpin.txt" % (config["project-folder"]), samples=samples),
        "%s/Reference/novelLoci.bed" % (config["project-folder"]),
        stats="%s/STATS/mirdb.stats" % (config["project-folder"])
    output:
        "%s/pipelineReport.html" % (config["project-folder"])
    log:
        "%s/logs/R/pipelineReport.log" % (config["project-folder"])
    benchmark:
        "%s/benchmark/R/pipelineReport.benchmark.tsv" % (config["project-folder"])
    singularity: config["singularity"]["reporting"]
    params:
       script=config["report-script"],
       projFolder=config["project-folder"],
       pipeFolder=config["pipeline-folder"],
       pipeConfig=config["pipeline-config"],
       refGenome=config["reference"],
       refAnnot=config["refAnnot"],
       samplesheet=config["samplesheet-file"],
       sampleinfo=config["sampleInfo-file"]
    threads: cluster["R_pipelineReport"]["cpus-per-task"]
    resources:
        time=cluster["R_pipelineReport"]["time"],
        mem=cluster["R_pipelineReport"]["mem-per-cpu"]
    shell:"""
       R -e "projFolder <- '{params.projFolder}'; \
             pipelineFolder <- '{params.pipeFolder}'; \
             refGenome.file <- '{params.refGenome}'; \
             refAnnot.file <- '{params.refAnnot}'; \
             pipelineConfig <- '{params.pipeConfig}'; \
             samplesheet.file <- '{params.samplesheet}'; \
             sampleinfo.file <- '{params.sampleinfo}'; \
             snakemake <- TRUE; \
             rmarkdown::render('{params.script}',output_file='{output}')" &> {log}
    """